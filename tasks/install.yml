---
- name: Set up version seperator
  when: dnsdist_package_version != ''
  block:
    - name: Prefix the version with the correct separator on RedHat
      ansible.builtin.set_fact:
        _dnsdist_package_version: "-{{ dnsdist_package_version }}"
        _version_separator: "-"
      when: ansible_os_family == 'RedHat'

    - name: Prefix the version with the correct separator on Debian
      ansible.builtin.set_fact:
        _dnsdist_package_version: "={{ dnsdist_package_version }}"
        _version_separator: "="
      when: ansible_os_family == 'Debian'

- name: Remove dnsdist if reinstall is forced
  ansible.builtin.package:
    name: "{{ dnsdist_package_name }}"
    state: absent
  when: dnsdist_force_reinstall | bool

- name: Remove dnsdist debug symbols if reinstall is forced
  ansible.builtin.package:
    name: "{{ dnsdist_debug_symbols_package_name }}"
    state: absent
  when: dnsdist_force_reinstall | bool

- name: Remove dnsdist additional packages
  ansible.builtin.package:
    name: "{{ item.name | default(item) }}"
    state: absent
  when: dnsdist_force_reinstall | bool
  with_items: "{{ dnsdist_additional_packages }}"

- name: Install dnsdist
  ansible.builtin.package:
    name: "{{ dnsdist_package_name }}{{ _dnsdist_package_version | default('') }}"
    state: latest

- name: Install dnsdist debug symbols
  ansible.builtin.package:
    name: "{{ dnsdist_debug_symbols_package_name }}{{ _dnsdist_package_version | default('') }}"
    state: latest
  when: dnsdist_install_debug_symbols_package | bool

- name: Install dnsdist additional packages
  ansible.builtin.package:
    name: "{{ item.name | default(item) }}{{ _version_separator ~ item.version if item.version is defined and item.version | length > 0 else '' }}"
    state: present
  when: dnsdist_additional_packages | length > 0
  with_items: "{{ dnsdist_additional_packages }}"
